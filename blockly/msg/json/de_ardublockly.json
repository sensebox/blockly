{
	"@metadata": {
		"author": "mariopesch",
		"lastupdated": "2017-05-31 14:45:36.754000",
		"locale": "de",
		"messagedocumentation" : "qqq_ardublockly"
	},
	"ARD_TYPE_CHAR": "Character",
	"ARD_TYPE_TEXT": "Text",
	"ARD_TYPE_BOOL": "Boolean",
	"ARD_TYPE_SHORT": "kurze Zahl",
	"ARD_TYPE_NUMBER": "Zahl",
	"ARD_TYPE_LONG": "große Zahl",
	"ARD_TYPE_DECIMAL": "Dezimalzahl",
	"ARD_TYPE_ARRAY": "Array",
	"ARD_TYPE_NULL": "Null",
	"ARD_TYPE_UNDEF": "Undefiniert",
	"ARD_TYPE_CHILDBLOCKMISSING": "ChildBlockMissing",
	"ARD_HIGH": "EIN",
	"ARD_LOW": "AUS",
	"ARD_ANALOGREAD": "lies analogen Pin#",
	"ARD_ANALOGREAD_TIP": "Gibt einen Wert zwischen 0 und 1024 zurück.",
	"ARD_ANALOGWRITE": "Setzte analogen pin#",
	"ARD_ANALOGWRITE_TIP": "Schreibt einen analogen Wert zwischen 0 und 255 zu einem spezifischen PWM Port.",
	"ARD_HIGHLOW_TIP": "Setzt den Pin Status auf HIGH oder LOW.",
	"ARD_DIGITALREAD": "lies digitalen Pin#",
	"ARD_DIGITALREAD_TIP": "Liest den Wert eines Digitalen Pin: Ergebnis HIGH oder LOW",
	"ARD_DIGITALWRITE": "setzte digitalen Pin#",
	"ARD_WRITE_TO": "auf",
	"ARD_DIGITALWRITE_TIP": "Schreibe den digitalen Wert HIGH oder LOW an einen spezifischen Port.",
	"ARD_BUILTIN_LED": "setzte die eingebaute LED",
	"ARD_BUILTIN_LED_TIP": "Licht an oder aus bei der eingebauten LED des Arduino.",
	"ARD_DEFINE": "definiere",
	"ARD_TONE_PIN": "Ton an PIN#",
	"ARD_TONE_FREQ": "Frequenz",
	"ARD_TONE_PIN_TIP": "Generiere Audio Töne an Pin",
	"ARD_NOTONE_PIN": "Ton aus an PIN#",
	"ARD_NOTONE_PIN_TIP": "Stoppe Ton an pin:",
	"ARD_MAP": "Datenmapping",
	"ARD_MAP_VAL": "Wert zwischen [0-",
	"ARD_MAP_TIP": "Ändert eine Nummer von [0-1024] in eine andere.",
	"ARD_FUN_RUN_SETUP": "Arduino Führe zu erst aus:",
	"ARD_FUN_RUN_LOOP": "Arduino Endlosschleife:",
	"ARD_FUN_RUN_TIP": "Definiert die Arduino setup() und loop() functions.",
	"ARD_PIN_WARN1": "Pin %1 wird benötigt für %2 als Pin %3. Wird bereits genutzt als %4.",
	"ARD_SERIAL_SETUP": "Setup",
	"ARD_SERIAL_SPEED": ":  Geschwindigkeit auf",
	"ARD_SERIAL_BPS": "bps",
	"ARD_SERIAL_SETUP_TIP": "Selects the speed for a specific Serial peripheral",
	"ARD_SERIAL_PRINT": "schreibe",
	"ARD_SERIAL_PRINT_NEWLINE": "füge eine neue Zeile hinzu.",
	"ARD_SERIAL_PRINT_TIP": "Prints data to the console/serial port as human-readable ASCII text.",
	"ARD_SERIAL_PRINT_WARN": "A setup block for %1 must be added to the workspace to use this block!",
	"ARD_SERVO_WRITE": "setzte Servomotor auf Pin",
	"ARD_SERVO_WRITE_TO": "auf",
	"ARD_SERVO_WRITE_DEG_180": "Grad (0~180)",
	"ARD_SERVO_WRITE_TIP": "Setzt einen Servomotor auf einen spezifischen Winkel.",
	"ARD_SERVO_READ": "Lies Servomotor von Pin:",
	"ARD_SERVO_READ_TIP": "Liest den Winkel des Servomotors",
	"ARD_SPI_SETUP": "Setup",
	"ARD_SPI_SETUP_CONF": "Konfiguration:",
	"ARD_SPI_SETUP_SHIFT": "data shift",
	"ARD_SPI_SETUP_MSBFIRST": "MSBFIRST",
	"ARD_SPI_SETUP_LSBFIRST": "LSBFIRST",
	"ARD_SPI_SETUP_DIVIDE": "clock divide",
	"ARD_SPI_SETUP_MODE": "SPI mode (idle - edge)",
	"ARD_SPI_SETUP_MODE0": "0 (Low - Falling)",
	"ARD_SPI_SETUP_MODE1": "1 (Low - Rising)",
	"ARD_SPI_SETUP_MODE2": "2 (High - Falling)",
	"ARD_SPI_SETUP_MODE3": "3 (High - Rising)",
	"ARD_SPI_SETUP_TIP": "Konfiguriert ein SPI Gerät.",
	"ARD_SPI_TRANS_NONE": "keine",
	"ARD_SPI_TRANS_VAL": "übertrage",
	"ARD_SPI_TRANS_SLAVE": "an einen slave pin",
	"ARD_SPI_TRANS_TIP": "Send a SPI message to an specified slave device.",
	"ARD_SPI_TRANS_WARN1": "A setup block for %1 must be added to the workspace to use this block!",
	"ARD_SPI_TRANS_WARN2": "Old pin value %1 is no longer available.",
	"ARD_SPI_TRANSRETURN_TIP": "Send a SPI message to an specified slave device and get data back.",
	"ARD_STEPPER_SETUP": "Setup SchrittMotor",
	"ARD_STEPPER_MOTOR": "Schritt Motor:",
	"ARD_STEPPER_DEFAULT_NAME": "MeinSchrittmotor",
	"ARD_STEPPER_NUMBER_OF_PINS": "Anzahl der Pins",
	"ARD_STEPPER_TWO_PINS": "2",
	"ARD_STEPPER_FOUR_PINS": "4",
	"ARD_STEPPER_PIN1": "pin1#",
	"ARD_STEPPER_PIN2": "pin2#",
	"ARD_STEPPER_PIN3": "pin3#",
	"ARD_STEPPER_PIN4": "pin4#",
	"ARD_STEPPER_REVOLVS": "Wie viele Schritte je durchlauf",
	"ARD_STEPPER_SPEED": "Setze Geschwindigkeit (rpm) auf",
	"ARD_STEPPER_SETUP_TIP": "Configures a stepper motor pinout and other settings.",
	"ARD_STEPPER_STEP": "Bewege Schrittmotor",
	"ARD_STEPPER_STEPS": "Schritte",
	"ARD_STEPPER_STEP_TIP": "Turns the stepper motor a specific number of steps.",
	"ARD_STEPPER_COMPONENT": "stepper",
	"ARD_COMPONENT_WARN1": "A %1 configuration block with the same %2 name must be added to use this block!",
	"ARD_TIME_DELAY": "warte",
	"ARD_TIME_MS": "millisekunden",
	"ARD_TIME_DELAY_TIP": "Warte eine spezifische Zeit in Millisekunden.",
	"ARD_TIME_DELAY_MICROS": "mircosekunden",
	"ARD_TIME_DELAY_MICRO_TIP": "Warte eine spezifische Zeit in microsekunden.",
	"ARD_TIME_MILLIS": "Vergangene Zeit seit Programmstart in Microsekunden.",
	"ARD_TIME_MILLIS_TIP": "Gibt die Zeit in Millesekunden zurück seitdem der Arduino das aktuelle Programm ausführt. Muss in einer integer Variable gespeichert werden.",
	"ARD_TIME_MICROS": "Vergangene Zeit seit Programstart in Microsekunden.",
	"ARD_TIME_MICROS_TIP": "Gibt die Zeit in Microsekunden zurück seitdem der Arduino das aktuelle Programm ausführt. Muss in einer integer Variable gespeichert werden.",
	"ARD_TIME_INF": "warte für immer (Beende Programm)",
	"ARD_TIME_INF_TIP": "Warte für immer (Beende das Programm).",
	"ARD_VAR_AS": "as",
	"ARD_VAR_AS_TIP": "Sets a value to a specific type",
	"ARD_PULSE_READ": "Miss %1 Pulse an Pin :%2",
	"ARD_PULSE_READ_TIMEOUT": "Miss %1 Pulse an Pin #%2 (Timeout nach %3 μs)",
	"ARD_PULSE_TIP": "Measures the duration of a pulse on the selected pin.",
	"ARD_PULSETIMEOUT_TIP": "Measures the duration of a pulse on the selected pin, if it is within the time-out in microseconds.",
	"ARD_SETTONE": "Setze Ton auf Pin#",
	"ARD_TONEFREQ": "mit Frequenz",
	"ARD_TONE_TIP": "Erzeugt einen Ton an Pin# mit einer spezifischen Frequenz zwischen 31 und 65535 Herzt.",
	"ARD_TONE_WARNING": "Frequency must be in range 31 - 65535",
	"ARD_NOTONE": "Schaltet den Ton aus an Pin#",
	"ARD_NOTONE_TIP": "Schaltet den Ton aus an Pin",
	"NEW_INSTANCE": "Neue Instanz",
	"RENAME_INSTANCE": "Benenne Instanz...",
	"NEW_INSTANCE_TITLE": "Neuer Instanz Name:",
	"RENAME_INSTANCE_TITLE": "Benenne alle '%1' Instanzen zu:",
	"senseBox_sen_temp_hum": "Temperaturn und Luftfeuchte Sensor",
	"senseBox_sen_value": "Messwert:",
	"senseBox_sen_temp": "Temperatur",
	"senseBox_sen_hum": "Luftfeuchtigkeit",
	"senseBox_sen_lux": "Helligkeitssensor",
	"senseBox_sen_uv": "Uv-Licht Sensor",
	"senseBox_sen_pressure": "Luftdrucksensor",
	"senseBox_sen_ultrasonic": "Ultraschall Abstandssensor",
	"senseBox_sen_ir": "Infrarot Abstandssensor",
	"senseBox_sen_sound": "Geräuschsensor",
	"senseBox_sen_foto": "Fotowiderstand",
	"senseBox_sen_buzzer": "Drucktaster",
	"senseBox_sen_poti": "Potenziometer",
	"senseBox_basic_piezo": "Piezo Piepser",
	"senseBox_basic_red": "Rot",
	"senseBox_basic_green": "Grün",
	"senseBox_basic_blue": "Blau",
	"senseBox_basic_state": "Status",
	"senseBox_output_timestamp": "Zeitstempel",
	"senseBox_output_format": "Format:",
	"senseBox_output_safetosd": "Auf SD Karte speichern",
	"senseBox_output_filename": "Dateiname",
	"senseBox_output_serialprint": "Auf Kommandozeile ausgeben",
	"senseBox_output_linebreak": "Zeilenumbruch",
	"senseBox_output_password": "Passwort",
	"senseBox_output_networkid": "NetzwerkID",
	"senseBox_on": "Ein",
	"senseBox_off": "Aus"
}
